{
  "openapi": "3.0.0",
  "info": {
    "title": "JWT Auth System API",
    "description": "API documentation for JWT-based authentication system",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8888/api",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Authentication endpoints"
    },
    {
      "name": "user",
      "description": "User related endpoints"
    }
  ],
  "paths": {
    "/register.php": {
      "post": {
        "tags": ["authentication"],
        "summary": "Register a new user",
        "description": "Creates a new user account and returns a JWT token on success",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors or registration failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed - only POST is supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login.php": {
      "post": {
        "tags": ["authentication"],
        "summary": "Authenticate a user",
        "description": "Authenticates a user with email and password, returns a JWT token on success",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed - only POST is supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile.php": {
      "get": {
        "tags": ["user"],
        "summary": "Get user profile",
        "description": "Returns the profile information of the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid, expired, or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed - only GET is supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MethodNotAllowedErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6,
            "description": "User's password (minimum 6 characters)"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password"
          },
          "remember_me": {
            "type": "boolean",
            "description": "Remember the login session (optional)",
            "default": false
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Kayıt başarılı ve otomatik giriş yapıldı."
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "JWT token for authentication"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "remember_me": {
                "type": "boolean",
                "description": "Indicates if remember_me was requested"
              }
            }
          }
        }
      },
      "ProfileResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the operation was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Profil bilgileri başarıyla alındı."
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Validation error message",
            "example": "İsim alanı gereklidir."
          }
        }
      },
      "AuthenticationErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Authentication error message",
            "example": "Geçersiz e-posta adresi veya şifre."
          }
        }
      },
      "NotFoundErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Not found error message",
            "example": "Kullanıcı bulunamadı."
          }
        }
      },
      "MethodNotAllowedErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Method not allowed error message",
            "example": "Sadece POST metodu desteklenmektedir."
          }
        }
      },
      "TokenErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Always false for error responses",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Token error message",
            "example": "Geçersiz veya süresi dolmuş token."
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token authentication"
      }
    }
  }
}
